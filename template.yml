# Serverless Application Model (SAM) definitions

AWSTemplateFormatVersion: '2010-09-09'
Transform:
- 'AWS::Serverless-2016-10-31'

Description:
  Creates a RESTful API using API Gateway and Lambda

Mappings:
  DependencyURL:
    dev:
      endpoint: https://dev.pokemoncentral.com
    pre-prod:
      endpoint: https://ppd.pokemoncentral.com
    prod:
      endpoint: https://pokemoncentral.com
      
Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 60
    Tags:
      stage:
        Ref: StageName
    # AutoPublishAlias:
    #     Ref: StageName
    Environment:
      Variables:
        # FindInMap will work in a deployment using CloudFormation
        # However FindInMap does not work locally with `sam local start-api`
        # See https://github.com/awslabs/aws-sam-cli/issues/476
        # As a work around use --env-var to pass environment variable values to sam local start-api`
        TEST_URL: !FindInMap [ DependencyURL, !Ref StageName, endpoint ] 
      
Parameters:
  RepositoryName:
    Type: String
    Description: Name of the git repo being deployed  
  StageName:
    Type: String
    Default: dev
    Description: The Lambda Function Stage
  S3BucketName:
    Type: String
    Description: The name of the S3 bucket in which the Swagger specification can be found.
  OrganizationName:
    Type: String
    Description: Name of Organization
  ProjectName:
    Type: String
    Description: Name of Project
  CustomerDomain:
    Type: String
    Description: Name of API Gateway custom domain
    Default: dev.api.slalom-dev.com
           
Resources:

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${RepositoryName}-${StageName}
      StageName: !Ref StageName
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location:
              Fn::Join:
                - ''
                - - 's3://'
                  - Ref: S3BucketName
                  - '/swagger.yml'
  
  # The BasePathMapping will fail if there is not a "Custom Domain Name" configured in the API Gateway Console. 
  # Custom domain names are configured separate from SAM template since they are shared across APIs
  APIBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: "RestApi"
    Properties:
      BasePath: !Sub ${RepositoryName}-${StageName}
      DomainName: !Ref CustomerDomain
      RestApiId: !Ref RestApi
      Stage: !Ref StageName

  SearchInventory:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${RepositoryName}-searchInventory-${StageName}
      Runtime: nodejs8.10
      CodeUri: inventory
      Handler: index.searchInventory
      Description: Search Inventory
      Timeout: 10
      Events:
        GET:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /inventory
            Method: get
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          OMS_TEST_PASSWORD: '{{resolve:secretsmanager:dev/oms/testing/password:SecretString:password}}'

  AddInventory:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${RepositoryName}-addInventory-${StageName}
      Runtime: nodejs8.10
      CodeUri: inventory
      Handler: index.addInventory
      Description: Adds inventory
      Timeout: 10
      Events:
        POST:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /inventory
            Method: post
      Role: !GetAtt LambdaExecutionRole.Arn

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${RepositoryName}-Execution-${StageName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        -  arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  ApiUrl:
    Value:
      Fn::Join:
        - ""
        - - "https://"
          - Ref: RestApi
          - Fn::Sub: ".execute-api.${AWS::Region}.amazonaws.com/dev"      