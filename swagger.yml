openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/tredfield/sample-api/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: inventory
  description: inventory calls

# whitelist pokemon vpn in non-prod account
Fn::If: 
- NonProd
-
  x-amazon-apigateway-policy:
    Version: "2012-10-17"
    Statement:
      - Effect: "Allow"
        Principal: "*"
        Action:
          - "execute-api:Invoke"
        Resource:
          - "arn:aws:execute-api:us-west-2:175387783879:*/*/*/*"
        Condition:
          IpAddress:
            aws:SourceIp:
              - "76.191.87.2"
- Ref: "AWS::NoValue"

paths:
  /inventory:
    get:
      tags:
      - inventory
      summary: searches inventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      operationId: searchInventory
      parameters:
      - name: searchString
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        400:
          description: bad input parameter
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SearchInventory.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
    post:
      tags:
      - inventory
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: addInventory
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddInventory.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
  # create a resource that maps to s3 bucket
  /static/{item+}:
    get:
      produces:
      - application/json
      parameters:
      - name: item
        in: path
        required: true
        type: string
      responses:
        '200':
          description: 200 response
          schema:
            "$ref": "#/definitions/Empty"
          headers:
            Content-Length:
              type: string
            Date:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
        '500':
          description: 500 response
      security:
      - sigv4: []
      x-amazon-apigateway-integration:
        # TODO need to define new generic role or pass this role
        credentials: arn:aws:iam::175387783879:role/tpci-ecommweb-labmda-access-s3
        responses:
          4\d{2}:
            statusCode: '400'
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Date: integration.response.header.Date
              method.response.header.Content-Length: integration.response.header.content-length
          5\d{2}:
            statusCode: '500'
        requestParameters:
          integration.request.path.item: method.request.path.item
        uri: arn:aws:apigateway:us-west-2:s3:path/tpci-aws-sam-ref-api/{item}
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: aws        
components:
  schemas:
    InventoryItem:
      required:
      - id
      - manufacturer
      - name
      - releaseDate
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: https://www.acme-corp.com
        phone:
          type: string
          example: 408-867-5309

